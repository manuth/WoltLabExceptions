name: WoltLabExceptions
kind: pipeline
type: docker

steps:
  - name: install
    image: node
    commands:
      - npm install --unsafe-perm
  - name: lint
    image: node
    depends_on:
      - install
    commands:
      - npm run lint
  - name: prepare release
    image: node
    depends_on:
      - lint
    commands:
      - npm install @stdlib/utils-escape-regexp-string --no-save
      - node -e "console.log(require('@stdlib/utils-escape-regexp-string')('${DRONE_TAG}'))" > .tagName.txt
      - export TagName=$$(cat .tagName.txt)
      - echo "/^## \(.* \($${TagName}\|\[$${TagName}\]\)\)\$/" > .tagHeading.txt
    when:
      event:
        - tag
  - name: check release prerequisites
    image: node
    depends_on:
      - prepare release
    environment:
      GITHUB_PUBLISH_TOKEN:
        from_secret: github_publish_token
    commands:
      - npm i --no-save @octokit/rest
      - >
        testGitHub() {
          node -e 'new (require("@octokit/rest").Octokit)({ auth: "'"$1"'" }).request("GET /user").catch(() => process.exit(1))' > /dev/null 2>&1
        }
      - export TagHeading=$$(cat .tagHeading.txt)
      - '[ ! -z "$$(sed "$${TagHeading}p;d" CHANGELOG.md)" ] || { echo "No Changelog Entries Found!" && false; }'
      - testGitHub $GITHUB_PUBLISH_TOKEN || { echo "The GitHub Publish Token is invalid!" && false; }
    when:
      event:
        - tag
  - name: create package
    image: node
    depends_on:
      - install
    commands:
      - npm run package
  - name: prepare release notes
    image: alpine
    depends_on:
      - check release prerequisites
    commands:
      - export TagName=$$(cat .tagName.txt)
      - export TagHeading=$$(cat .tagHeading.txt)
      - export HeadingPattern='/## \(.* \(v[0-9.]*\|\[.*\]\)\)/'
      - cp -f CHANGELOG.md .releaseNotes.md
      - sed -i "1,$${TagHeading}{ $${TagHeading}P ; d } ; $${HeadingPattern},\$d" .releaseNotes.md
      - cp -f .releaseNotes.md .releaseTitle.md
      - sed -i "2,\$d ; s$${HeadingPattern}\\\\1/" .releaseTitle.md
    when:
      event:
        - tag
  - name: publish release
    image: plugins/github-release
    depends_on:
      - create package
      - prepare release notes
    commands: []
    settings:
      api_key:
        from_secret: github_publish_token
      files:
        - "*.tar"
      title: .releaseTitle.md
      note: .releaseNotes.md
    when:
      event:
        - tag

trigger:
  ref:
    - refs/heads/**
    - refs/pull/**
    - refs/tags/**
  event:
    - push
    - pull_request
    - tag
